/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.ga4gh.wip;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class GAVariant extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GAVariant\",\"namespace\":\"org.ga4gh.wip\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"startJoin\",\"type\":{\"type\":\"record\",\"name\":\"GAVariantJoinLocation\",\"fields\":[{\"name\":\"variantId\",\"type\":\"string\"},{\"name\":\"position\",\"type\":\"int\"},{\"name\":\"side\",\"type\":{\"type\":\"enum\",\"name\":\"GAVariantSide\",\"symbols\":[\"PLUS\",\"MINUS\"]}}]}},{\"name\":\"endJoin\",\"type\":\"GAVariantJoinLocation\"},{\"name\":\"sequence\",\"type\":\"string\"},{\"name\":\"info\",\"type\":{\"type\":\"map\",\"values\":\"string\"},\"default\":{}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence id;
  @Deprecated public org.ga4gh.wip.GAVariantJoinLocation startJoin;
  @Deprecated public org.ga4gh.wip.GAVariantJoinLocation endJoin;
  @Deprecated public java.lang.CharSequence sequence;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> info;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public GAVariant() {}

  /**
   * All-args constructor.
   */
  public GAVariant(java.lang.CharSequence id, org.ga4gh.wip.GAVariantJoinLocation startJoin, org.ga4gh.wip.GAVariantJoinLocation endJoin, java.lang.CharSequence sequence, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> info) {
    this.id = id;
    this.startJoin = startJoin;
    this.endJoin = endJoin;
    this.sequence = sequence;
    this.info = info;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return startJoin;
    case 2: return endJoin;
    case 3: return sequence;
    case 4: return info;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: startJoin = (org.ga4gh.wip.GAVariantJoinLocation)value$; break;
    case 2: endJoin = (org.ga4gh.wip.GAVariantJoinLocation)value$; break;
    case 3: sequence = (java.lang.CharSequence)value$; break;
    case 4: info = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'startJoin' field.
   */
  public org.ga4gh.wip.GAVariantJoinLocation getStartJoin() {
    return startJoin;
  }

  /**
   * Sets the value of the 'startJoin' field.
   * @param value the value to set.
   */
  public void setStartJoin(org.ga4gh.wip.GAVariantJoinLocation value) {
    this.startJoin = value;
  }

  /**
   * Gets the value of the 'endJoin' field.
   */
  public org.ga4gh.wip.GAVariantJoinLocation getEndJoin() {
    return endJoin;
  }

  /**
   * Sets the value of the 'endJoin' field.
   * @param value the value to set.
   */
  public void setEndJoin(org.ga4gh.wip.GAVariantJoinLocation value) {
    this.endJoin = value;
  }

  /**
   * Gets the value of the 'sequence' field.
   */
  public java.lang.CharSequence getSequence() {
    return sequence;
  }

  /**
   * Sets the value of the 'sequence' field.
   * @param value the value to set.
   */
  public void setSequence(java.lang.CharSequence value) {
    this.sequence = value;
  }

  /**
   * Gets the value of the 'info' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getInfo() {
    return info;
  }

  /**
   * Sets the value of the 'info' field.
   * @param value the value to set.
   */
  public void setInfo(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.info = value;
  }

  /** Creates a new GAVariant RecordBuilder */
  public static org.ga4gh.wip.GAVariant.Builder newBuilder() {
    return new org.ga4gh.wip.GAVariant.Builder();
  }
  
  /** Creates a new GAVariant RecordBuilder by copying an existing Builder */
  public static org.ga4gh.wip.GAVariant.Builder newBuilder(org.ga4gh.wip.GAVariant.Builder other) {
    return new org.ga4gh.wip.GAVariant.Builder(other);
  }
  
  /** Creates a new GAVariant RecordBuilder by copying an existing GAVariant instance */
  public static org.ga4gh.wip.GAVariant.Builder newBuilder(org.ga4gh.wip.GAVariant other) {
    return new org.ga4gh.wip.GAVariant.Builder(other);
  }
  
  /**
   * RecordBuilder for GAVariant instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GAVariant>
    implements org.apache.avro.data.RecordBuilder<GAVariant> {

    private java.lang.CharSequence id;
    private org.ga4gh.wip.GAVariantJoinLocation startJoin;
    private org.ga4gh.wip.GAVariantJoinLocation endJoin;
    private java.lang.CharSequence sequence;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> info;

    /** Creates a new Builder */
    private Builder() {
      super(org.ga4gh.wip.GAVariant.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.ga4gh.wip.GAVariant.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.startJoin)) {
        this.startJoin = data().deepCopy(fields()[1].schema(), other.startJoin);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.endJoin)) {
        this.endJoin = data().deepCopy(fields()[2].schema(), other.endJoin);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.sequence)) {
        this.sequence = data().deepCopy(fields()[3].schema(), other.sequence);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.info)) {
        this.info = data().deepCopy(fields()[4].schema(), other.info);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing GAVariant instance */
    private Builder(org.ga4gh.wip.GAVariant other) {
            super(org.ga4gh.wip.GAVariant.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.startJoin)) {
        this.startJoin = data().deepCopy(fields()[1].schema(), other.startJoin);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.endJoin)) {
        this.endJoin = data().deepCopy(fields()[2].schema(), other.endJoin);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.sequence)) {
        this.sequence = data().deepCopy(fields()[3].schema(), other.sequence);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.info)) {
        this.info = data().deepCopy(fields()[4].schema(), other.info);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.CharSequence getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public org.ga4gh.wip.GAVariant.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public org.ga4gh.wip.GAVariant.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'startJoin' field */
    public org.ga4gh.wip.GAVariantJoinLocation getStartJoin() {
      return startJoin;
    }
    
    /** Sets the value of the 'startJoin' field */
    public org.ga4gh.wip.GAVariant.Builder setStartJoin(org.ga4gh.wip.GAVariantJoinLocation value) {
      validate(fields()[1], value);
      this.startJoin = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'startJoin' field has been set */
    public boolean hasStartJoin() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'startJoin' field */
    public org.ga4gh.wip.GAVariant.Builder clearStartJoin() {
      startJoin = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'endJoin' field */
    public org.ga4gh.wip.GAVariantJoinLocation getEndJoin() {
      return endJoin;
    }
    
    /** Sets the value of the 'endJoin' field */
    public org.ga4gh.wip.GAVariant.Builder setEndJoin(org.ga4gh.wip.GAVariantJoinLocation value) {
      validate(fields()[2], value);
      this.endJoin = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'endJoin' field has been set */
    public boolean hasEndJoin() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'endJoin' field */
    public org.ga4gh.wip.GAVariant.Builder clearEndJoin() {
      endJoin = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'sequence' field */
    public java.lang.CharSequence getSequence() {
      return sequence;
    }
    
    /** Sets the value of the 'sequence' field */
    public org.ga4gh.wip.GAVariant.Builder setSequence(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.sequence = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'sequence' field has been set */
    public boolean hasSequence() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'sequence' field */
    public org.ga4gh.wip.GAVariant.Builder clearSequence() {
      sequence = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'info' field */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getInfo() {
      return info;
    }
    
    /** Sets the value of the 'info' field */
    public org.ga4gh.wip.GAVariant.Builder setInfo(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[4], value);
      this.info = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'info' field has been set */
    public boolean hasInfo() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'info' field */
    public org.ga4gh.wip.GAVariant.Builder clearInfo() {
      info = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public GAVariant build() {
      try {
        GAVariant record = new GAVariant();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.startJoin = fieldSetFlags()[1] ? this.startJoin : (org.ga4gh.wip.GAVariantJoinLocation) defaultValue(fields()[1]);
        record.endJoin = fieldSetFlags()[2] ? this.endJoin : (org.ga4gh.wip.GAVariantJoinLocation) defaultValue(fields()[2]);
        record.sequence = fieldSetFlags()[3] ? this.sequence : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.info = fieldSetFlags()[4] ? this.info : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
