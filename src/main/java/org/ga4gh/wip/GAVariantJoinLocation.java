/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.ga4gh.wip;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class GAVariantJoinLocation extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GAVariantJoinLocation\",\"namespace\":\"org.ga4gh.wip\",\"fields\":[{\"name\":\"variantId\",\"type\":\"string\"},{\"name\":\"position\",\"type\":\"int\"},{\"name\":\"side\",\"type\":{\"type\":\"enum\",\"name\":\"GAVariantSide\",\"symbols\":[\"PLUS\",\"MINUS\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence variantId;
  @Deprecated public int position;
  @Deprecated public org.ga4gh.wip.GAVariantSide side;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public GAVariantJoinLocation() {}

  /**
   * All-args constructor.
   */
  public GAVariantJoinLocation(java.lang.CharSequence variantId, java.lang.Integer position, org.ga4gh.wip.GAVariantSide side) {
    this.variantId = variantId;
    this.position = position;
    this.side = side;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return variantId;
    case 1: return position;
    case 2: return side;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: variantId = (java.lang.CharSequence)value$; break;
    case 1: position = (java.lang.Integer)value$; break;
    case 2: side = (org.ga4gh.wip.GAVariantSide)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'variantId' field.
   */
  public java.lang.CharSequence getVariantId() {
    return variantId;
  }

  /**
   * Sets the value of the 'variantId' field.
   * @param value the value to set.
   */
  public void setVariantId(java.lang.CharSequence value) {
    this.variantId = value;
  }

  /**
   * Gets the value of the 'position' field.
   */
  public java.lang.Integer getPosition() {
    return position;
  }

  /**
   * Sets the value of the 'position' field.
   * @param value the value to set.
   */
  public void setPosition(java.lang.Integer value) {
    this.position = value;
  }

  /**
   * Gets the value of the 'side' field.
   */
  public org.ga4gh.wip.GAVariantSide getSide() {
    return side;
  }

  /**
   * Sets the value of the 'side' field.
   * @param value the value to set.
   */
  public void setSide(org.ga4gh.wip.GAVariantSide value) {
    this.side = value;
  }

  /** Creates a new GAVariantJoinLocation RecordBuilder */
  public static org.ga4gh.wip.GAVariantJoinLocation.Builder newBuilder() {
    return new org.ga4gh.wip.GAVariantJoinLocation.Builder();
  }
  
  /** Creates a new GAVariantJoinLocation RecordBuilder by copying an existing Builder */
  public static org.ga4gh.wip.GAVariantJoinLocation.Builder newBuilder(org.ga4gh.wip.GAVariantJoinLocation.Builder other) {
    return new org.ga4gh.wip.GAVariantJoinLocation.Builder(other);
  }
  
  /** Creates a new GAVariantJoinLocation RecordBuilder by copying an existing GAVariantJoinLocation instance */
  public static org.ga4gh.wip.GAVariantJoinLocation.Builder newBuilder(org.ga4gh.wip.GAVariantJoinLocation other) {
    return new org.ga4gh.wip.GAVariantJoinLocation.Builder(other);
  }
  
  /**
   * RecordBuilder for GAVariantJoinLocation instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GAVariantJoinLocation>
    implements org.apache.avro.data.RecordBuilder<GAVariantJoinLocation> {

    private java.lang.CharSequence variantId;
    private int position;
    private org.ga4gh.wip.GAVariantSide side;

    /** Creates a new Builder */
    private Builder() {
      super(org.ga4gh.wip.GAVariantJoinLocation.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.ga4gh.wip.GAVariantJoinLocation.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.variantId)) {
        this.variantId = data().deepCopy(fields()[0].schema(), other.variantId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.position)) {
        this.position = data().deepCopy(fields()[1].schema(), other.position);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.side)) {
        this.side = data().deepCopy(fields()[2].schema(), other.side);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing GAVariantJoinLocation instance */
    private Builder(org.ga4gh.wip.GAVariantJoinLocation other) {
            super(org.ga4gh.wip.GAVariantJoinLocation.SCHEMA$);
      if (isValidValue(fields()[0], other.variantId)) {
        this.variantId = data().deepCopy(fields()[0].schema(), other.variantId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.position)) {
        this.position = data().deepCopy(fields()[1].schema(), other.position);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.side)) {
        this.side = data().deepCopy(fields()[2].schema(), other.side);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'variantId' field */
    public java.lang.CharSequence getVariantId() {
      return variantId;
    }
    
    /** Sets the value of the 'variantId' field */
    public org.ga4gh.wip.GAVariantJoinLocation.Builder setVariantId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.variantId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'variantId' field has been set */
    public boolean hasVariantId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'variantId' field */
    public org.ga4gh.wip.GAVariantJoinLocation.Builder clearVariantId() {
      variantId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'position' field */
    public java.lang.Integer getPosition() {
      return position;
    }
    
    /** Sets the value of the 'position' field */
    public org.ga4gh.wip.GAVariantJoinLocation.Builder setPosition(int value) {
      validate(fields()[1], value);
      this.position = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'position' field has been set */
    public boolean hasPosition() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'position' field */
    public org.ga4gh.wip.GAVariantJoinLocation.Builder clearPosition() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'side' field */
    public org.ga4gh.wip.GAVariantSide getSide() {
      return side;
    }
    
    /** Sets the value of the 'side' field */
    public org.ga4gh.wip.GAVariantJoinLocation.Builder setSide(org.ga4gh.wip.GAVariantSide value) {
      validate(fields()[2], value);
      this.side = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'side' field has been set */
    public boolean hasSide() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'side' field */
    public org.ga4gh.wip.GAVariantJoinLocation.Builder clearSide() {
      side = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public GAVariantJoinLocation build() {
      try {
        GAVariantJoinLocation record = new GAVariantJoinLocation();
        record.variantId = fieldSetFlags()[0] ? this.variantId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.position = fieldSetFlags()[1] ? this.position : (java.lang.Integer) defaultValue(fields()[1]);
        record.side = fieldSetFlags()[2] ? this.side : (org.ga4gh.wip.GAVariantSide) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
