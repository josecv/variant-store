/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.ga4gh;  
@SuppressWarnings("all")
/** This is the response from `POST /references/search` expressed as JSON. */
@org.apache.avro.specific.AvroGenerated
public class GASearchReferencesResponse extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GASearchReferencesResponse\",\"namespace\":\"org.ga4gh\",\"doc\":\"This is the response from `POST /references/search` expressed as JSON.\",\"fields\":[{\"name\":\"references\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GAReference\",\"doc\":\"A `GAReference` is a canonical assembled contig, intended to act as a\\nreference coordinate space for other genomic annotations. A single\\n`GAReference` might represent the human chromosome 1, for instance.\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"doc\":\"The reference ID. Unique within the repository.\"},{\"name\":\"length\",\"type\":\"long\",\"doc\":\"The length of this reference's sequence.\"},{\"name\":\"md5checksum\",\"type\":\"string\",\"doc\":\"MD5 of the upper-case sequence excluding all whitespace characters\\n  (this is equivalent to SQ:M5 in SAM).\"},{\"name\":\"name\",\"type\":\"string\",\"doc\":\"The name of this reference. (e.g. '22') Also see the\\n  `names` field on the parent `GAReferenceSet`.\"},{\"name\":\"sourceURI\",\"type\":[\"null\",\"string\"],\"doc\":\"The URI from which the sequence was obtained.\\n  Specifies a FASTA format file/string with one name, sequence pair.\",\"default\":null},{\"name\":\"sourceAccessions\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally\\n  with a version number, e.g. `GCF_000001405.26`.\"},{\"name\":\"isDerived\",\"type\":\"boolean\",\"doc\":\"A sequence X is said to be derived from source sequence Y, if X and Y\\n  are of the same length and the per-base sequence divergence at A/C/G/T bases\\n  is sufficiently small. Two sequences derived from the same official\\n  sequence share the same coordinates and annotations, and\\n  can be replaced with the official sequence for certain use cases.\",\"default\":false},{\"name\":\"sourceDivergence\",\"type\":[\"null\",\"float\"],\"doc\":\"The `sourceDivergence` is the fraction of non-indel bases that do not match the\\n  reference this record was derived from.\",\"default\":null},{\"name\":\"ncbiTaxonId\",\"type\":[\"null\",\"int\"],\"doc\":\"ID from http://www.ncbi.nlm.nih.gov/taxonomy (e.g. 9606->human).\",\"default\":null}]}},\"doc\":\"The list of matching references.\",\"default\":[]},{\"name\":\"nextPageToken\",\"type\":[\"null\",\"string\"],\"doc\":\"The continuation token, which is used to page through large result sets.\\n  Provide this value in a subsequent request to return the next page of\\n  results. This field will be empty if there aren't any additional results.\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The list of matching references. */
  @Deprecated public java.util.List<org.ga4gh.GAReference> references;
  /** The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results. */
  @Deprecated public java.lang.CharSequence nextPageToken;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public GASearchReferencesResponse() {}

  /**
   * All-args constructor.
   */
  public GASearchReferencesResponse(java.util.List<org.ga4gh.GAReference> references, java.lang.CharSequence nextPageToken) {
    this.references = references;
    this.nextPageToken = nextPageToken;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return references;
    case 1: return nextPageToken;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: references = (java.util.List<org.ga4gh.GAReference>)value$; break;
    case 1: nextPageToken = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'references' field.
   * The list of matching references.   */
  public java.util.List<org.ga4gh.GAReference> getReferences() {
    return references;
  }

  /**
   * Sets the value of the 'references' field.
   * The list of matching references.   * @param value the value to set.
   */
  public void setReferences(java.util.List<org.ga4gh.GAReference> value) {
    this.references = value;
  }

  /**
   * Gets the value of the 'nextPageToken' field.
   * The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.   */
  public java.lang.CharSequence getNextPageToken() {
    return nextPageToken;
  }

  /**
   * Sets the value of the 'nextPageToken' field.
   * The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.   * @param value the value to set.
   */
  public void setNextPageToken(java.lang.CharSequence value) {
    this.nextPageToken = value;
  }

  /** Creates a new GASearchReferencesResponse RecordBuilder */
  public static org.ga4gh.GASearchReferencesResponse.Builder newBuilder() {
    return new org.ga4gh.GASearchReferencesResponse.Builder();
  }
  
  /** Creates a new GASearchReferencesResponse RecordBuilder by copying an existing Builder */
  public static org.ga4gh.GASearchReferencesResponse.Builder newBuilder(org.ga4gh.GASearchReferencesResponse.Builder other) {
    return new org.ga4gh.GASearchReferencesResponse.Builder(other);
  }
  
  /** Creates a new GASearchReferencesResponse RecordBuilder by copying an existing GASearchReferencesResponse instance */
  public static org.ga4gh.GASearchReferencesResponse.Builder newBuilder(org.ga4gh.GASearchReferencesResponse other) {
    return new org.ga4gh.GASearchReferencesResponse.Builder(other);
  }
  
  /**
   * RecordBuilder for GASearchReferencesResponse instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GASearchReferencesResponse>
    implements org.apache.avro.data.RecordBuilder<GASearchReferencesResponse> {

    private java.util.List<org.ga4gh.GAReference> references;
    private java.lang.CharSequence nextPageToken;

    /** Creates a new Builder */
    private Builder() {
      super(org.ga4gh.GASearchReferencesResponse.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.ga4gh.GASearchReferencesResponse.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.references)) {
        this.references = data().deepCopy(fields()[0].schema(), other.references);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.nextPageToken)) {
        this.nextPageToken = data().deepCopy(fields()[1].schema(), other.nextPageToken);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing GASearchReferencesResponse instance */
    private Builder(org.ga4gh.GASearchReferencesResponse other) {
            super(org.ga4gh.GASearchReferencesResponse.SCHEMA$);
      if (isValidValue(fields()[0], other.references)) {
        this.references = data().deepCopy(fields()[0].schema(), other.references);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.nextPageToken)) {
        this.nextPageToken = data().deepCopy(fields()[1].schema(), other.nextPageToken);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'references' field */
    public java.util.List<org.ga4gh.GAReference> getReferences() {
      return references;
    }
    
    /** Sets the value of the 'references' field */
    public org.ga4gh.GASearchReferencesResponse.Builder setReferences(java.util.List<org.ga4gh.GAReference> value) {
      validate(fields()[0], value);
      this.references = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'references' field has been set */
    public boolean hasReferences() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'references' field */
    public org.ga4gh.GASearchReferencesResponse.Builder clearReferences() {
      references = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'nextPageToken' field */
    public java.lang.CharSequence getNextPageToken() {
      return nextPageToken;
    }
    
    /** Sets the value of the 'nextPageToken' field */
    public org.ga4gh.GASearchReferencesResponse.Builder setNextPageToken(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.nextPageToken = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'nextPageToken' field has been set */
    public boolean hasNextPageToken() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'nextPageToken' field */
    public org.ga4gh.GASearchReferencesResponse.Builder clearNextPageToken() {
      nextPageToken = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public GASearchReferencesResponse build() {
      try {
        GASearchReferencesResponse record = new GASearchReferencesResponse();
        record.references = fieldSetFlags()[0] ? this.references : (java.util.List<org.ga4gh.GAReference>) defaultValue(fields()[0]);
        record.nextPageToken = fieldSetFlags()[1] ? this.nextPageToken : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
