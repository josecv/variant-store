/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.ga4gh;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class GAReadGroupSet extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GAReadGroupSet\",\"namespace\":\"org.ga4gh\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"doc\":\"The read group set ID.\"},{\"name\":\"datasetId\",\"type\":[\"null\",\"string\"],\"doc\":\"The ID of the dataset this read group set belongs to.\",\"default\":null},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"doc\":\"The read group set name.\",\"default\":null},{\"name\":\"readGroups\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GAReadGroup\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"doc\":\"The read group ID.\"},{\"name\":\"datasetId\",\"type\":[\"null\",\"string\"],\"doc\":\"The ID of the dataset this read group belongs to.\",\"default\":null},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"doc\":\"The read group name.\",\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"doc\":\"The read group description.\",\"default\":null},{\"name\":\"sampleId\",\"type\":[\"null\",\"string\"],\"doc\":\"The sample this read group's data was generated from.\"},{\"name\":\"experiment\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GAExperiment\",\"fields\":[{\"name\":\"libraryId\",\"type\":[\"null\",\"string\"],\"doc\":\"The library used as part of this experiment.\",\"default\":null},{\"name\":\"platformUnit\",\"type\":[\"null\",\"string\"],\"doc\":\"The platform unit used as part of this experiment.\",\"default\":null},{\"name\":\"sequencingCenter\",\"type\":[\"null\",\"string\"],\"doc\":\"The sequencing center used as part of this experiment.\"},{\"name\":\"instrumentModel\",\"type\":[\"null\",\"string\"],\"doc\":\"The instrument model used as part of this experiment.\\n  This maps to sequencing technology in BAM.\"}]}],\"doc\":\"The experiment used to generate this read group.\"},{\"name\":\"predictedInsertSize\",\"type\":[\"null\",\"int\"],\"doc\":\"The predicted insert size of this read group.\",\"default\":null},{\"name\":\"created\",\"type\":[\"null\",\"long\"],\"doc\":\"The time at which this read group was created in milliseconds from the epoch.\",\"default\":null},{\"name\":\"updated\",\"type\":[\"null\",\"long\"],\"doc\":\"The time at which this read group was last updated in milliseconds\\n  from the epoch.\",\"default\":null},{\"name\":\"programs\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GAProgram\",\"fields\":[{\"name\":\"commandLine\",\"type\":[\"null\",\"string\"],\"doc\":\"The command line used to run this program.\",\"default\":null},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"doc\":\"The user specified ID of the program.\",\"default\":null},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"doc\":\"The name of the program.\",\"default\":null},{\"name\":\"prevProgramId\",\"type\":[\"null\",\"string\"],\"doc\":\"The ID of the program run before this one.\",\"default\":null},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"doc\":\"The version of the program run.\",\"default\":null}]}},\"doc\":\"The programs used to generate this read group.\",\"default\":[]},{\"name\":\"referenceSetId\",\"type\":[\"null\",\"string\"],\"doc\":\"The reference set the reads in this read group are aligned to.\\n  Required if there are any read alignments.\",\"default\":null},{\"name\":\"info\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":\"string\"}},\"doc\":\"A map of additional read group information.\",\"default\":{}}]}},\"doc\":\"The read groups in this set.\",\"default\":[]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The read group set ID. */
  @Deprecated public java.lang.CharSequence id;
  /** The ID of the dataset this read group set belongs to. */
  @Deprecated public java.lang.CharSequence datasetId;
  /** The read group set name. */
  @Deprecated public java.lang.CharSequence name;
  /** The read groups in this set. */
  @Deprecated public java.util.List<org.ga4gh.GAReadGroup> readGroups;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public GAReadGroupSet() {}

  /**
   * All-args constructor.
   */
  public GAReadGroupSet(java.lang.CharSequence id, java.lang.CharSequence datasetId, java.lang.CharSequence name, java.util.List<org.ga4gh.GAReadGroup> readGroups) {
    this.id = id;
    this.datasetId = datasetId;
    this.name = name;
    this.readGroups = readGroups;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return datasetId;
    case 2: return name;
    case 3: return readGroups;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: datasetId = (java.lang.CharSequence)value$; break;
    case 2: name = (java.lang.CharSequence)value$; break;
    case 3: readGroups = (java.util.List<org.ga4gh.GAReadGroup>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * The read group set ID.   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * The read group set ID.   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'datasetId' field.
   * The ID of the dataset this read group set belongs to.   */
  public java.lang.CharSequence getDatasetId() {
    return datasetId;
  }

  /**
   * Sets the value of the 'datasetId' field.
   * The ID of the dataset this read group set belongs to.   * @param value the value to set.
   */
  public void setDatasetId(java.lang.CharSequence value) {
    this.datasetId = value;
  }

  /**
   * Gets the value of the 'name' field.
   * The read group set name.   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * The read group set name.   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'readGroups' field.
   * The read groups in this set.   */
  public java.util.List<org.ga4gh.GAReadGroup> getReadGroups() {
    return readGroups;
  }

  /**
   * Sets the value of the 'readGroups' field.
   * The read groups in this set.   * @param value the value to set.
   */
  public void setReadGroups(java.util.List<org.ga4gh.GAReadGroup> value) {
    this.readGroups = value;
  }

  /** Creates a new GAReadGroupSet RecordBuilder */
  public static org.ga4gh.GAReadGroupSet.Builder newBuilder() {
    return new org.ga4gh.GAReadGroupSet.Builder();
  }
  
  /** Creates a new GAReadGroupSet RecordBuilder by copying an existing Builder */
  public static org.ga4gh.GAReadGroupSet.Builder newBuilder(org.ga4gh.GAReadGroupSet.Builder other) {
    return new org.ga4gh.GAReadGroupSet.Builder(other);
  }
  
  /** Creates a new GAReadGroupSet RecordBuilder by copying an existing GAReadGroupSet instance */
  public static org.ga4gh.GAReadGroupSet.Builder newBuilder(org.ga4gh.GAReadGroupSet other) {
    return new org.ga4gh.GAReadGroupSet.Builder(other);
  }
  
  /**
   * RecordBuilder for GAReadGroupSet instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GAReadGroupSet>
    implements org.apache.avro.data.RecordBuilder<GAReadGroupSet> {

    private java.lang.CharSequence id;
    private java.lang.CharSequence datasetId;
    private java.lang.CharSequence name;
    private java.util.List<org.ga4gh.GAReadGroup> readGroups;

    /** Creates a new Builder */
    private Builder() {
      super(org.ga4gh.GAReadGroupSet.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.ga4gh.GAReadGroupSet.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.datasetId)) {
        this.datasetId = data().deepCopy(fields()[1].schema(), other.datasetId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.readGroups)) {
        this.readGroups = data().deepCopy(fields()[3].schema(), other.readGroups);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing GAReadGroupSet instance */
    private Builder(org.ga4gh.GAReadGroupSet other) {
            super(org.ga4gh.GAReadGroupSet.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.datasetId)) {
        this.datasetId = data().deepCopy(fields()[1].schema(), other.datasetId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.readGroups)) {
        this.readGroups = data().deepCopy(fields()[3].schema(), other.readGroups);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.CharSequence getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public org.ga4gh.GAReadGroupSet.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public org.ga4gh.GAReadGroupSet.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'datasetId' field */
    public java.lang.CharSequence getDatasetId() {
      return datasetId;
    }
    
    /** Sets the value of the 'datasetId' field */
    public org.ga4gh.GAReadGroupSet.Builder setDatasetId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.datasetId = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'datasetId' field has been set */
    public boolean hasDatasetId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'datasetId' field */
    public org.ga4gh.GAReadGroupSet.Builder clearDatasetId() {
      datasetId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public org.ga4gh.GAReadGroupSet.Builder setName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'name' field */
    public org.ga4gh.GAReadGroupSet.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'readGroups' field */
    public java.util.List<org.ga4gh.GAReadGroup> getReadGroups() {
      return readGroups;
    }
    
    /** Sets the value of the 'readGroups' field */
    public org.ga4gh.GAReadGroupSet.Builder setReadGroups(java.util.List<org.ga4gh.GAReadGroup> value) {
      validate(fields()[3], value);
      this.readGroups = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'readGroups' field has been set */
    public boolean hasReadGroups() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'readGroups' field */
    public org.ga4gh.GAReadGroupSet.Builder clearReadGroups() {
      readGroups = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public GAReadGroupSet build() {
      try {
        GAReadGroupSet record = new GAReadGroupSet();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.datasetId = fieldSetFlags()[1] ? this.datasetId : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.readGroups = fieldSetFlags()[3] ? this.readGroups : (java.util.List<org.ga4gh.GAReadGroup>) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
