/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.ga4gh;  
@SuppressWarnings("all")
/** This request maps to the body of `POST /variantsets/search` as JSON. */
@org.apache.avro.specific.AvroGenerated
public class GASearchVariantSetsRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GASearchVariantSetsRequest\",\"namespace\":\"org.ga4gh\",\"doc\":\"This request maps to the body of `POST /variantsets/search` as JSON.\",\"fields\":[{\"name\":\"datasetIds\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"If specified, will restrict the query to variant sets within the\\n    given datasets.\",\"default\":[]},{\"name\":\"pageSize\",\"type\":[\"null\",\"int\"],\"doc\":\"Specifies the maximum number of results to return in a single page. \\n    If unspecified, a system default will be used.\",\"default\":null},{\"name\":\"pageToken\",\"type\":[\"null\",\"string\"],\"doc\":\"The continuation token, which is used to page through large result sets.\\n    To get the next page of results, set this parameter to the value of\\n    `nextPageToken` from the previous response.\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** If specified, will restrict the query to variant sets within the
    given datasets. */
  @Deprecated public java.util.List<java.lang.CharSequence> datasetIds;
  /** Specifies the maximum number of results to return in a single page. 
    If unspecified, a system default will be used. */
  @Deprecated public java.lang.Integer pageSize;
  /** The continuation token, which is used to page through large result sets.
    To get the next page of results, set this parameter to the value of
    `nextPageToken` from the previous response. */
  @Deprecated public java.lang.CharSequence pageToken;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public GASearchVariantSetsRequest() {}

  /**
   * All-args constructor.
   */
  public GASearchVariantSetsRequest(java.util.List<java.lang.CharSequence> datasetIds, java.lang.Integer pageSize, java.lang.CharSequence pageToken) {
    this.datasetIds = datasetIds;
    this.pageSize = pageSize;
    this.pageToken = pageToken;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return datasetIds;
    case 1: return pageSize;
    case 2: return pageToken;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: datasetIds = (java.util.List<java.lang.CharSequence>)value$; break;
    case 1: pageSize = (java.lang.Integer)value$; break;
    case 2: pageToken = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'datasetIds' field.
   * If specified, will restrict the query to variant sets within the
    given datasets.   */
  public java.util.List<java.lang.CharSequence> getDatasetIds() {
    return datasetIds;
  }

  /**
   * Sets the value of the 'datasetIds' field.
   * If specified, will restrict the query to variant sets within the
    given datasets.   * @param value the value to set.
   */
  public void setDatasetIds(java.util.List<java.lang.CharSequence> value) {
    this.datasetIds = value;
  }

  /**
   * Gets the value of the 'pageSize' field.
   * Specifies the maximum number of results to return in a single page. 
    If unspecified, a system default will be used.   */
  public java.lang.Integer getPageSize() {
    return pageSize;
  }

  /**
   * Sets the value of the 'pageSize' field.
   * Specifies the maximum number of results to return in a single page. 
    If unspecified, a system default will be used.   * @param value the value to set.
   */
  public void setPageSize(java.lang.Integer value) {
    this.pageSize = value;
  }

  /**
   * Gets the value of the 'pageToken' field.
   * The continuation token, which is used to page through large result sets.
    To get the next page of results, set this parameter to the value of
    `nextPageToken` from the previous response.   */
  public java.lang.CharSequence getPageToken() {
    return pageToken;
  }

  /**
   * Sets the value of the 'pageToken' field.
   * The continuation token, which is used to page through large result sets.
    To get the next page of results, set this parameter to the value of
    `nextPageToken` from the previous response.   * @param value the value to set.
   */
  public void setPageToken(java.lang.CharSequence value) {
    this.pageToken = value;
  }

  /** Creates a new GASearchVariantSetsRequest RecordBuilder */
  public static org.ga4gh.GASearchVariantSetsRequest.Builder newBuilder() {
    return new org.ga4gh.GASearchVariantSetsRequest.Builder();
  }
  
  /** Creates a new GASearchVariantSetsRequest RecordBuilder by copying an existing Builder */
  public static org.ga4gh.GASearchVariantSetsRequest.Builder newBuilder(org.ga4gh.GASearchVariantSetsRequest.Builder other) {
    return new org.ga4gh.GASearchVariantSetsRequest.Builder(other);
  }
  
  /** Creates a new GASearchVariantSetsRequest RecordBuilder by copying an existing GASearchVariantSetsRequest instance */
  public static org.ga4gh.GASearchVariantSetsRequest.Builder newBuilder(org.ga4gh.GASearchVariantSetsRequest other) {
    return new org.ga4gh.GASearchVariantSetsRequest.Builder(other);
  }
  
  /**
   * RecordBuilder for GASearchVariantSetsRequest instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GASearchVariantSetsRequest>
    implements org.apache.avro.data.RecordBuilder<GASearchVariantSetsRequest> {

    private java.util.List<java.lang.CharSequence> datasetIds;
    private java.lang.Integer pageSize;
    private java.lang.CharSequence pageToken;

    /** Creates a new Builder */
    private Builder() {
      super(org.ga4gh.GASearchVariantSetsRequest.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.ga4gh.GASearchVariantSetsRequest.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.datasetIds)) {
        this.datasetIds = data().deepCopy(fields()[0].schema(), other.datasetIds);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.pageSize)) {
        this.pageSize = data().deepCopy(fields()[1].schema(), other.pageSize);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.pageToken)) {
        this.pageToken = data().deepCopy(fields()[2].schema(), other.pageToken);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing GASearchVariantSetsRequest instance */
    private Builder(org.ga4gh.GASearchVariantSetsRequest other) {
            super(org.ga4gh.GASearchVariantSetsRequest.SCHEMA$);
      if (isValidValue(fields()[0], other.datasetIds)) {
        this.datasetIds = data().deepCopy(fields()[0].schema(), other.datasetIds);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.pageSize)) {
        this.pageSize = data().deepCopy(fields()[1].schema(), other.pageSize);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.pageToken)) {
        this.pageToken = data().deepCopy(fields()[2].schema(), other.pageToken);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'datasetIds' field */
    public java.util.List<java.lang.CharSequence> getDatasetIds() {
      return datasetIds;
    }
    
    /** Sets the value of the 'datasetIds' field */
    public org.ga4gh.GASearchVariantSetsRequest.Builder setDatasetIds(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[0], value);
      this.datasetIds = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'datasetIds' field has been set */
    public boolean hasDatasetIds() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'datasetIds' field */
    public org.ga4gh.GASearchVariantSetsRequest.Builder clearDatasetIds() {
      datasetIds = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'pageSize' field */
    public java.lang.Integer getPageSize() {
      return pageSize;
    }
    
    /** Sets the value of the 'pageSize' field */
    public org.ga4gh.GASearchVariantSetsRequest.Builder setPageSize(java.lang.Integer value) {
      validate(fields()[1], value);
      this.pageSize = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'pageSize' field has been set */
    public boolean hasPageSize() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'pageSize' field */
    public org.ga4gh.GASearchVariantSetsRequest.Builder clearPageSize() {
      pageSize = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'pageToken' field */
    public java.lang.CharSequence getPageToken() {
      return pageToken;
    }
    
    /** Sets the value of the 'pageToken' field */
    public org.ga4gh.GASearchVariantSetsRequest.Builder setPageToken(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.pageToken = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'pageToken' field has been set */
    public boolean hasPageToken() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'pageToken' field */
    public org.ga4gh.GASearchVariantSetsRequest.Builder clearPageToken() {
      pageToken = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public GASearchVariantSetsRequest build() {
      try {
        GASearchVariantSetsRequest record = new GASearchVariantSetsRequest();
        record.datasetIds = fieldSetFlags()[0] ? this.datasetIds : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[0]);
        record.pageSize = fieldSetFlags()[1] ? this.pageSize : (java.lang.Integer) defaultValue(fields()[1]);
        record.pageToken = fieldSetFlags()[2] ? this.pageToken : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
