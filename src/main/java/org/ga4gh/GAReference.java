/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.ga4gh;  
@SuppressWarnings("all")
/** A `GAReference` is a canonical assembled contig, intended to act as a
reference coordinate space for other genomic annotations. A single
`GAReference` might represent the human chromosome 1, for instance. */
@org.apache.avro.specific.AvroGenerated
public class GAReference extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GAReference\",\"namespace\":\"org.ga4gh\",\"doc\":\"A `GAReference` is a canonical assembled contig, intended to act as a\\nreference coordinate space for other genomic annotations. A single\\n`GAReference` might represent the human chromosome 1, for instance.\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"doc\":\"The reference ID. Unique within the repository.\"},{\"name\":\"length\",\"type\":\"long\",\"doc\":\"The length of this reference's sequence.\"},{\"name\":\"md5checksum\",\"type\":\"string\",\"doc\":\"MD5 of the upper-case sequence excluding all whitespace characters\\n  (this is equivalent to SQ:M5 in SAM).\"},{\"name\":\"name\",\"type\":\"string\",\"doc\":\"The name of this reference. (e.g. '22') Also see the\\n  `names` field on the parent `GAReferenceSet`.\"},{\"name\":\"sourceURI\",\"type\":[\"null\",\"string\"],\"doc\":\"The URI from which the sequence was obtained.\\n  Specifies a FASTA format file/string with one name, sequence pair.\",\"default\":null},{\"name\":\"sourceAccessions\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally\\n  with a version number, e.g. `GCF_000001405.26`.\"},{\"name\":\"isDerived\",\"type\":\"boolean\",\"doc\":\"A sequence X is said to be derived from source sequence Y, if X and Y\\n  are of the same length and the per-base sequence divergence at A/C/G/T bases\\n  is sufficiently small. Two sequences derived from the same official\\n  sequence share the same coordinates and annotations, and\\n  can be replaced with the official sequence for certain use cases.\",\"default\":false},{\"name\":\"sourceDivergence\",\"type\":[\"null\",\"float\"],\"doc\":\"The `sourceDivergence` is the fraction of non-indel bases that do not match the\\n  reference this record was derived from.\",\"default\":null},{\"name\":\"ncbiTaxonId\",\"type\":[\"null\",\"int\"],\"doc\":\"ID from http://www.ncbi.nlm.nih.gov/taxonomy (e.g. 9606->human).\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The reference ID. Unique within the repository. */
  @Deprecated public java.lang.CharSequence id;
  /** The length of this reference's sequence. */
  @Deprecated public long length;
  /** MD5 of the upper-case sequence excluding all whitespace characters
  (this is equivalent to SQ:M5 in SAM). */
  @Deprecated public java.lang.CharSequence md5checksum;
  /** The name of this reference. (e.g. '22') Also see the
  `names` field on the parent `GAReferenceSet`. */
  @Deprecated public java.lang.CharSequence name;
  /** The URI from which the sequence was obtained.
  Specifies a FASTA format file/string with one name, sequence pair. */
  @Deprecated public java.lang.CharSequence sourceURI;
  /** All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally
  with a version number, e.g. `GCF_000001405.26`. */
  @Deprecated public java.util.List<java.lang.CharSequence> sourceAccessions;
  /** A sequence X is said to be derived from source sequence Y, if X and Y
  are of the same length and the per-base sequence divergence at A/C/G/T bases
  is sufficiently small. Two sequences derived from the same official
  sequence share the same coordinates and annotations, and
  can be replaced with the official sequence for certain use cases. */
  @Deprecated public boolean isDerived;
  /** The `sourceDivergence` is the fraction of non-indel bases that do not match the
  reference this record was derived from. */
  @Deprecated public java.lang.Float sourceDivergence;
  /** ID from http://www.ncbi.nlm.nih.gov/taxonomy (e.g. 9606->human). */
  @Deprecated public java.lang.Integer ncbiTaxonId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public GAReference() {}

  /**
   * All-args constructor.
   */
  public GAReference(java.lang.CharSequence id, java.lang.Long length, java.lang.CharSequence md5checksum, java.lang.CharSequence name, java.lang.CharSequence sourceURI, java.util.List<java.lang.CharSequence> sourceAccessions, java.lang.Boolean isDerived, java.lang.Float sourceDivergence, java.lang.Integer ncbiTaxonId) {
    this.id = id;
    this.length = length;
    this.md5checksum = md5checksum;
    this.name = name;
    this.sourceURI = sourceURI;
    this.sourceAccessions = sourceAccessions;
    this.isDerived = isDerived;
    this.sourceDivergence = sourceDivergence;
    this.ncbiTaxonId = ncbiTaxonId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return length;
    case 2: return md5checksum;
    case 3: return name;
    case 4: return sourceURI;
    case 5: return sourceAccessions;
    case 6: return isDerived;
    case 7: return sourceDivergence;
    case 8: return ncbiTaxonId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: length = (java.lang.Long)value$; break;
    case 2: md5checksum = (java.lang.CharSequence)value$; break;
    case 3: name = (java.lang.CharSequence)value$; break;
    case 4: sourceURI = (java.lang.CharSequence)value$; break;
    case 5: sourceAccessions = (java.util.List<java.lang.CharSequence>)value$; break;
    case 6: isDerived = (java.lang.Boolean)value$; break;
    case 7: sourceDivergence = (java.lang.Float)value$; break;
    case 8: ncbiTaxonId = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * The reference ID. Unique within the repository.   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * The reference ID. Unique within the repository.   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'length' field.
   * The length of this reference's sequence.   */
  public java.lang.Long getLength() {
    return length;
  }

  /**
   * Sets the value of the 'length' field.
   * The length of this reference's sequence.   * @param value the value to set.
   */
  public void setLength(java.lang.Long value) {
    this.length = value;
  }

  /**
   * Gets the value of the 'md5checksum' field.
   * MD5 of the upper-case sequence excluding all whitespace characters
  (this is equivalent to SQ:M5 in SAM).   */
  public java.lang.CharSequence getMd5checksum() {
    return md5checksum;
  }

  /**
   * Sets the value of the 'md5checksum' field.
   * MD5 of the upper-case sequence excluding all whitespace characters
  (this is equivalent to SQ:M5 in SAM).   * @param value the value to set.
   */
  public void setMd5checksum(java.lang.CharSequence value) {
    this.md5checksum = value;
  }

  /**
   * Gets the value of the 'name' field.
   * The name of this reference. (e.g. '22') Also see the
  `names` field on the parent `GAReferenceSet`.   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * The name of this reference. (e.g. '22') Also see the
  `names` field on the parent `GAReferenceSet`.   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'sourceURI' field.
   * The URI from which the sequence was obtained.
  Specifies a FASTA format file/string with one name, sequence pair.   */
  public java.lang.CharSequence getSourceURI() {
    return sourceURI;
  }

  /**
   * Sets the value of the 'sourceURI' field.
   * The URI from which the sequence was obtained.
  Specifies a FASTA format file/string with one name, sequence pair.   * @param value the value to set.
   */
  public void setSourceURI(java.lang.CharSequence value) {
    this.sourceURI = value;
  }

  /**
   * Gets the value of the 'sourceAccessions' field.
   * All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally
  with a version number, e.g. `GCF_000001405.26`.   */
  public java.util.List<java.lang.CharSequence> getSourceAccessions() {
    return sourceAccessions;
  }

  /**
   * Sets the value of the 'sourceAccessions' field.
   * All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally
  with a version number, e.g. `GCF_000001405.26`.   * @param value the value to set.
   */
  public void setSourceAccessions(java.util.List<java.lang.CharSequence> value) {
    this.sourceAccessions = value;
  }

  /**
   * Gets the value of the 'isDerived' field.
   * A sequence X is said to be derived from source sequence Y, if X and Y
  are of the same length and the per-base sequence divergence at A/C/G/T bases
  is sufficiently small. Two sequences derived from the same official
  sequence share the same coordinates and annotations, and
  can be replaced with the official sequence for certain use cases.   */
  public java.lang.Boolean getIsDerived() {
    return isDerived;
  }

  /**
   * Sets the value of the 'isDerived' field.
   * A sequence X is said to be derived from source sequence Y, if X and Y
  are of the same length and the per-base sequence divergence at A/C/G/T bases
  is sufficiently small. Two sequences derived from the same official
  sequence share the same coordinates and annotations, and
  can be replaced with the official sequence for certain use cases.   * @param value the value to set.
   */
  public void setIsDerived(java.lang.Boolean value) {
    this.isDerived = value;
  }

  /**
   * Gets the value of the 'sourceDivergence' field.
   * The `sourceDivergence` is the fraction of non-indel bases that do not match the
  reference this record was derived from.   */
  public java.lang.Float getSourceDivergence() {
    return sourceDivergence;
  }

  /**
   * Sets the value of the 'sourceDivergence' field.
   * The `sourceDivergence` is the fraction of non-indel bases that do not match the
  reference this record was derived from.   * @param value the value to set.
   */
  public void setSourceDivergence(java.lang.Float value) {
    this.sourceDivergence = value;
  }

  /**
   * Gets the value of the 'ncbiTaxonId' field.
   * ID from http://www.ncbi.nlm.nih.gov/taxonomy (e.g. 9606->human).   */
  public java.lang.Integer getNcbiTaxonId() {
    return ncbiTaxonId;
  }

  /**
   * Sets the value of the 'ncbiTaxonId' field.
   * ID from http://www.ncbi.nlm.nih.gov/taxonomy (e.g. 9606->human).   * @param value the value to set.
   */
  public void setNcbiTaxonId(java.lang.Integer value) {
    this.ncbiTaxonId = value;
  }

  /** Creates a new GAReference RecordBuilder */
  public static org.ga4gh.GAReference.Builder newBuilder() {
    return new org.ga4gh.GAReference.Builder();
  }
  
  /** Creates a new GAReference RecordBuilder by copying an existing Builder */
  public static org.ga4gh.GAReference.Builder newBuilder(org.ga4gh.GAReference.Builder other) {
    return new org.ga4gh.GAReference.Builder(other);
  }
  
  /** Creates a new GAReference RecordBuilder by copying an existing GAReference instance */
  public static org.ga4gh.GAReference.Builder newBuilder(org.ga4gh.GAReference other) {
    return new org.ga4gh.GAReference.Builder(other);
  }
  
  /**
   * RecordBuilder for GAReference instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GAReference>
    implements org.apache.avro.data.RecordBuilder<GAReference> {

    private java.lang.CharSequence id;
    private long length;
    private java.lang.CharSequence md5checksum;
    private java.lang.CharSequence name;
    private java.lang.CharSequence sourceURI;
    private java.util.List<java.lang.CharSequence> sourceAccessions;
    private boolean isDerived;
    private java.lang.Float sourceDivergence;
    private java.lang.Integer ncbiTaxonId;

    /** Creates a new Builder */
    private Builder() {
      super(org.ga4gh.GAReference.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.ga4gh.GAReference.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.length)) {
        this.length = data().deepCopy(fields()[1].schema(), other.length);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.md5checksum)) {
        this.md5checksum = data().deepCopy(fields()[2].schema(), other.md5checksum);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.name)) {
        this.name = data().deepCopy(fields()[3].schema(), other.name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.sourceURI)) {
        this.sourceURI = data().deepCopy(fields()[4].schema(), other.sourceURI);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.sourceAccessions)) {
        this.sourceAccessions = data().deepCopy(fields()[5].schema(), other.sourceAccessions);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.isDerived)) {
        this.isDerived = data().deepCopy(fields()[6].schema(), other.isDerived);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.sourceDivergence)) {
        this.sourceDivergence = data().deepCopy(fields()[7].schema(), other.sourceDivergence);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.ncbiTaxonId)) {
        this.ncbiTaxonId = data().deepCopy(fields()[8].schema(), other.ncbiTaxonId);
        fieldSetFlags()[8] = true;
      }
    }
    
    /** Creates a Builder by copying an existing GAReference instance */
    private Builder(org.ga4gh.GAReference other) {
            super(org.ga4gh.GAReference.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.length)) {
        this.length = data().deepCopy(fields()[1].schema(), other.length);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.md5checksum)) {
        this.md5checksum = data().deepCopy(fields()[2].schema(), other.md5checksum);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.name)) {
        this.name = data().deepCopy(fields()[3].schema(), other.name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.sourceURI)) {
        this.sourceURI = data().deepCopy(fields()[4].schema(), other.sourceURI);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.sourceAccessions)) {
        this.sourceAccessions = data().deepCopy(fields()[5].schema(), other.sourceAccessions);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.isDerived)) {
        this.isDerived = data().deepCopy(fields()[6].schema(), other.isDerived);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.sourceDivergence)) {
        this.sourceDivergence = data().deepCopy(fields()[7].schema(), other.sourceDivergence);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.ncbiTaxonId)) {
        this.ncbiTaxonId = data().deepCopy(fields()[8].schema(), other.ncbiTaxonId);
        fieldSetFlags()[8] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.CharSequence getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public org.ga4gh.GAReference.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public org.ga4gh.GAReference.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'length' field */
    public java.lang.Long getLength() {
      return length;
    }
    
    /** Sets the value of the 'length' field */
    public org.ga4gh.GAReference.Builder setLength(long value) {
      validate(fields()[1], value);
      this.length = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'length' field has been set */
    public boolean hasLength() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'length' field */
    public org.ga4gh.GAReference.Builder clearLength() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'md5checksum' field */
    public java.lang.CharSequence getMd5checksum() {
      return md5checksum;
    }
    
    /** Sets the value of the 'md5checksum' field */
    public org.ga4gh.GAReference.Builder setMd5checksum(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.md5checksum = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'md5checksum' field has been set */
    public boolean hasMd5checksum() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'md5checksum' field */
    public org.ga4gh.GAReference.Builder clearMd5checksum() {
      md5checksum = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public org.ga4gh.GAReference.Builder setName(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.name = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'name' field */
    public org.ga4gh.GAReference.Builder clearName() {
      name = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'sourceURI' field */
    public java.lang.CharSequence getSourceURI() {
      return sourceURI;
    }
    
    /** Sets the value of the 'sourceURI' field */
    public org.ga4gh.GAReference.Builder setSourceURI(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.sourceURI = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'sourceURI' field has been set */
    public boolean hasSourceURI() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'sourceURI' field */
    public org.ga4gh.GAReference.Builder clearSourceURI() {
      sourceURI = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'sourceAccessions' field */
    public java.util.List<java.lang.CharSequence> getSourceAccessions() {
      return sourceAccessions;
    }
    
    /** Sets the value of the 'sourceAccessions' field */
    public org.ga4gh.GAReference.Builder setSourceAccessions(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[5], value);
      this.sourceAccessions = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'sourceAccessions' field has been set */
    public boolean hasSourceAccessions() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'sourceAccessions' field */
    public org.ga4gh.GAReference.Builder clearSourceAccessions() {
      sourceAccessions = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'isDerived' field */
    public java.lang.Boolean getIsDerived() {
      return isDerived;
    }
    
    /** Sets the value of the 'isDerived' field */
    public org.ga4gh.GAReference.Builder setIsDerived(boolean value) {
      validate(fields()[6], value);
      this.isDerived = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'isDerived' field has been set */
    public boolean hasIsDerived() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'isDerived' field */
    public org.ga4gh.GAReference.Builder clearIsDerived() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'sourceDivergence' field */
    public java.lang.Float getSourceDivergence() {
      return sourceDivergence;
    }
    
    /** Sets the value of the 'sourceDivergence' field */
    public org.ga4gh.GAReference.Builder setSourceDivergence(java.lang.Float value) {
      validate(fields()[7], value);
      this.sourceDivergence = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'sourceDivergence' field has been set */
    public boolean hasSourceDivergence() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'sourceDivergence' field */
    public org.ga4gh.GAReference.Builder clearSourceDivergence() {
      sourceDivergence = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'ncbiTaxonId' field */
    public java.lang.Integer getNcbiTaxonId() {
      return ncbiTaxonId;
    }
    
    /** Sets the value of the 'ncbiTaxonId' field */
    public org.ga4gh.GAReference.Builder setNcbiTaxonId(java.lang.Integer value) {
      validate(fields()[8], value);
      this.ncbiTaxonId = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'ncbiTaxonId' field has been set */
    public boolean hasNcbiTaxonId() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'ncbiTaxonId' field */
    public org.ga4gh.GAReference.Builder clearNcbiTaxonId() {
      ncbiTaxonId = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public GAReference build() {
      try {
        GAReference record = new GAReference();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.length = fieldSetFlags()[1] ? this.length : (java.lang.Long) defaultValue(fields()[1]);
        record.md5checksum = fieldSetFlags()[2] ? this.md5checksum : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.name = fieldSetFlags()[3] ? this.name : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.sourceURI = fieldSetFlags()[4] ? this.sourceURI : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.sourceAccessions = fieldSetFlags()[5] ? this.sourceAccessions : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[5]);
        record.isDerived = fieldSetFlags()[6] ? this.isDerived : (java.lang.Boolean) defaultValue(fields()[6]);
        record.sourceDivergence = fieldSetFlags()[7] ? this.sourceDivergence : (java.lang.Float) defaultValue(fields()[7]);
        record.ncbiTaxonId = fieldSetFlags()[8] ? this.ncbiTaxonId : (java.lang.Integer) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
